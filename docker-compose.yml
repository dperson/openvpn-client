version: '3.4'

services:
  # This is the vpn service responsible for establishing a connection to the VPN
  # server and sending traffic to (and from) it.
  vpn:
    image: dperson/openvpn-client

    # Extra permissions required for the image to function.
    cap_add:
      - net_admin
    security_opt:
      - label:disable
    devices:
      - /dev/net/tun

    # If you need to interactively enter your password, un-comment the following
    # lines.
    # stdin_open: true
    # tty: true

    # The only traffic allowed out of this container is traffic to this network
    # and TCP/UDP from the vpn linux group.
    networks:
      - local

    # Put .ovpn configuration file in the /vpn directory of the container or
    # launch using the command line arguments.
    # volumes:
    #   - ./vpn:/vpn
    # command: 'server;user;password[;port]'

  # This service utilizes the VPN connection using network_mode.
  service1:
    image: jwilder/whoami

    # This container binds to port 8000.

    # Share the network stack of the vpn client container. When this container
    # binds ports, they can be reached through the vpn service. This also adds a
    # depnds_on for the vpn service.
    network_mode: service:vpn

  web:
    image: dperson/nginx
    depends_on:
      - service1

    # Connect to the "local" network to connect to the service1 service through
    # the vpn service.
    networks:
      - local

    # Bind ports to 0.0.0.0 of the host machine.
    ports:
      - "80:80"
      - "443:443"

    # service1 shares the network stack of vpn. The vpn can by reached by using
    # the name of the service container as a hostname.
    command: -w "http://vpn:8000;/vpn"

networks:
  # A network for connecting the web service to service1 (and the vpn service
  # which it shares a network stack with).
  local:
